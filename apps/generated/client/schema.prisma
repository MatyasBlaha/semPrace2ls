// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../../generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String?
  createdAt DateTime  @default(now())
  deletedAt DateTime?

  userOwners UserOwner[]
  Employees  Employee[]
  UserRole   UserRole?
}

model Owner {
  id          String    @id @default(uuid())
  name        String
  description String
  createdAt   DateTime  @default(now())
  deletedAt   DateTime?

  userOwners UserOwner[]
  Branches   Branch[]
}

model Branch {
  id       String     @id @default(uuid())
  name     String
  location String
  type     BranchType @default(MARKET)

  owner   Owner  @relation(fields: [ownerId], references: [id])
  ownerId String

  Employees Employee[]
}

model Employee {
  id          String @id @default(uuid())
  name        String
  phoneNumber String
  email       String

  Branch   Branch @relation(fields: [branchId], references: [id])
  branchId String

  User   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model UserRole {
  id   String @id @default(uuid())
  role Role   @default(USER)

  User   User?  @relation(fields: [userId], references: [id])
  userId String @unique
}

enum Role {
  SUPERADMIN
  ACCOUNTANT
  MANAGER
  USER
  HR
}

enum BranchType {
  OFFICE
  MARKET
  WAREHOUSE
}

model UserOwner {
  user   User   @relation(fields: [userId], references: [id])
  userId String

  owner   Owner  @relation(fields: [ownerId], references: [id])
  ownerId String

  @@id([userId, ownerId])
}
